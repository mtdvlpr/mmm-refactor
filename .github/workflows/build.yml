name: Build/release

on:
  push:
  pull_request:

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read package version
        uses: ZvonimirSun/read-package-version-actions@v2
        id: package-version

      - name: Version check
        run: |
          echo "Current version: ${{ steps.package-version.outputs.version }}"

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - run: pip install setuptools
      - run: yarn install && yarn global add @quasar/cli

      - name: Build and publish Electron app
        run: yarn quasar build -m electron
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      # - name: Create Sentry release
      #   if: matrix.os == 'ubuntu-latest'
      #   uses: getsentry/action-release@v1.7.0
      #   env:
      #     SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      #     SENTRY_ORG: 'jw-projects'
      #     SENTRY_PROJECT: 'mmm-v2'
      #   with:
      #     dist: ${{ steps.package-version.outputs.current-version}}
      #     environment: production
      #     # sourcemaps: './dist/electron/UnPackaged/assets'
      #     sourcemaps: './'

      - run: yarn install && yarn global add @sentry/cli
        name: Install Sentry CLI

      - run: sentry-cli sourcemaps inject ./dist/
        name: Inject Debug IDs Into Artifacts

      - run: sentry-cli --auth-token ${{ secrets.SENTRY_AUTH_TOKEN }} sourcemaps upload --org 'jw-projects' --project 'mmm-v2' --dist ${{ matrix.os }} --release ${{ steps.package-version.outputs.version}} ./
        name: Upload sourcemaps
